name: Build and Release

on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "CMakeLists.txt"
      - "Kconfig"
      - "Makefile"
      - ".github/workflows/build-and-release.yaml"
      - "*.conf"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Install Zephyr dependencies
        run: |
          sudo apt install --no-install-recommends git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev
          sudo env "PATH=$PATH" pip3 install cmake wheel
          sudo env "PATH=$PATH" pip3 install -U --pre west

      # Workaround for https://github.com/NordicSemiconductor/pc-nrfutil/issues/288
      - name: Install latest PIP
        run: |
          sudo python3 -m pip install -U pip
          # Newer PIP will not overwrite distutils, so upgrade PyYAML manually
          sudo apt-get install python3-setuptools
          sudo python3 -m pip install --ignore-installed -U PyYAML
      
      - name: Install Rust+Cargo
        run: |
          sudo /bin/sh -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
          export PATH=~/.local/bin:/usr/share/rust/.cargo/bin:$PATH

      - name: Cache GCC ARM Embed binary
        id: cache-gcc-arm
        uses: actions/cache@v2.1.6
        with:
          path: gcc-arm/
          key: ${{ runner.OS }}-gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux

      - name: Download GCC ARM Embed
        if: steps.cache-gcc-arm.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/gcc-arm/
          wget -q 'https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2' -O ${GITHUB_WORKSPACE}/gcc-arm/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2

      - name: Install GCC ARM Embed
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/gnuarmemb/
          tar xvfj ${GITHUB_WORKSPACE}/gcc-arm/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2 -C ${GITHUB_WORKSPACE}/gnuarmemb/

      - name: Cache NCS
        id: cache-ncs
        uses: actions/cache@v2.1.6
        with:
          path: ncs/
          key: ${{ runner.OS }}-ncs
      
      - name: Download NCS v1.5.0
        if: steps.cache-ncs.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/ncs && cd ${GITHUB_WORKSPACE}/ncs
          west init -m https://github.com/nrfconnect/sdk-nrf --mr v1.5.0
          west update

      - name: Setup NCS
        run: |
          cd ${GITHUB_WORKSPACE}/ncs
          west zephyr-export
          sudo env "PATH=$PATH" pip3 install pc_ble_driver_py
          sudo env "PATH=$PATH" pip3 install -r zephyr/scripts/requirements.txt
          sudo env "PATH=$PATH" pip3 install -r nrf/scripts/requirements.txt
          sudo apt-get -y remove python-cryptography python3-cryptography
          sudo env "PATH=$PATH" pip3 install -r bootloader/mcuboot/scripts/requirements.txt
          cd nrf && cd applications
          rm -d -r ruuvitag_fw_zephyr
          git clone --recursive https://github.com/${GITHUB_REPOSITORY} ruuvitag_fw_zephyr
          cd ruuvitag_fw_zephyr
          git reset --hard ${GITHUB_SHA}

      - name: Determine next release version
        run: |
          npm ci
          export NEXT_VERSION=`node ${GITHUB_WORKSPACE}/ncs/nrf/applications/ruuvitag_fw_zephyr/.github/workflows/get-next-version.js`
          echo "CONFIG_RUUVITAG_APP_VERSION=\"$NEXT_VERSION\"" >> ${GITHUB_WORKSPACE}/ncs/nrf/applications/ruuvitag_fw_zephyr/prj.conf

      - name: Build
        run: |
          export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
          export GNUARMEMB_TOOLCHAIN_PATH=${GITHUB_WORKSPACE}/gnuarmemb/gcc-arm-none-eabi-9-2020-q2-update
          export PATH=~/.local/bin:/usr/share/rust/.cargo/bin:$PATH
          cd ${GITHUB_WORKSPACE}/ncs/nrf/applications/ruuvitag_fw_zephyr
          mkdir -p -v ${GITHUB_WORKSPACE}/.cache
          export XDG_CACHE_HOME=${GITHUB_WORKSPACE}/.cache

          # App full
          west build -p -b ruuvi_ruuvitag -- -DOVERLAY_CONFIG=mcuboot.conf
          mv -v ${GITHUB_WORKSPACE}/ncs/nrf/applications/ruuvitag_fw_zephyr/build/zephyr/merged.hex ${GITHUB_WORKSPACE}/ruuvitag_fw_full.hex
          mv -v ${GITHUB_WORKSPACE}/ncs/nrf/applications/ruuvitag_fw_zephyr/build/zephyr/app_update.bin ${GITHUB_WORKSPACE}/ruuvitag_fw_update.bin

      - name: Semantic release
        continue-on-error: true
        run: npx semantic-release
